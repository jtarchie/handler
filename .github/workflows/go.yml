# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: denoland/setup-deno@v1
    - uses: actions/setup-go@v3
      with:
        go-version: '1.20'
        check-latest: true
        cache: true
    - name: Install golangci-lint
      uses: jaxxstorm/action-install-gh-release@v1.10.0
      with: # Grab the latest version
        repo: golangci/golangci-lint
        token: ${{ secrets.GITHUB_TOKEN }}
        binaries-location: golangci-lint-1.53.3-linux-amd64
        tag: v1.53.3
    - name: Install task
      uses: jaxxstorm/action-install-gh-release@v1.10.0
      with: # Grab the latest version
        repo: go-task/task
        token: ${{ secrets.GITHUB_TOKEN }}
        cache: enable
    - name: cache rqlite
      id: cache-rqlite
      uses: actions/cache@v3
      with:
        path: rqlite-v7.20.6-linux-amd64
        key: ${{ runner.os }}-rqlite
    - name: Install rqlite
      if: steps.cache-rqlite.outputs.cache-hit != 'true'
      run: |
        curl -L https://github.com/rqlite/rqlite/releases/download/v7.20.6/rqlite-v7.20.6-linux-amd64.tar.gz -o rqlite-v7.20.6-linux-amd64.tar.gz
        tar xvfz rqlite-v7.20.6-linux-amd64.tar.gz
    - name: setup path
      run: echo "${PWD}/rqlite-v7.20.6-linux-amd64/" >> $GITHUB_PATH
    - name: Task
      run: task
